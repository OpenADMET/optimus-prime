# This section specifies the input data
data:
  # Specify the dataset file
  resource: ../ChEMBL_permissive_CYP3A4_CHEMBL340_aggregated.parquet
  type: intake
  input_col: OPENADMET_SMILES
  # Specify each (1+) of the target columns, or the column that you're trying to predict
  target_cols:
  - pchembl_value_mean
  dropna: true

# Additional metadata
metadata:
  authors: Cynthia Xu
  email: cynthia.xu@omsf.io
  biotargets:
  - CYP3A4
  build_number: 0
  description: basic regression using a random forest model
  driver: sklearn
  name: rf_pchembl
  tag: openadmet-chembl
  tags:
  - openadmet
  - test
  - pchembl
  version: v1

# Section specifying training procedure
procedure:
# Featurization specification
  feat:
    # Using concatenated features, which combines multiple featurizers
    # here we use DescriptorFeaturizer and FingerprintFeaturizer for 2D RDKit descriptors and ECFP4 fingerprints
    # See openadmet.models.features 
    type: FeatureConcatenator
    # Add parameters for the featurizer. Full description of the featurizer options are in Section 5.
    params:
      featurizers:
        DescriptorFeaturizer:
          descr_type: "desc2d"
        FingerprintFeaturizer:
          fp_type: "ecfp:4"

  # Model specification
  model:
    # Indicate model type
    # See openadmet.models.architecture for all model types
    type: RFRegressorModel
    # Specify model parameters
    params:
      n_estimators: 100
      max_depth: 10

  # Specify data splits
  split:
    # Specify how data will be split
    # See openadmet.models.split
    type: ShuffleSplitter
    # Specify split parameters
    params:
      random_state: 42
      train_size: 0.8
      val_size: 0.0
      test_size: 0.2

  train:
    # Specify the trainer, here SKLearnBasicTrainer as model has an sklearn interface
    # could also use SKLearnGridSearchTrainer for hyperparameter tuning
    type: SKLearnBasicTrainer


# Section specifying report generation
report:
  # Configure evaluation
  eval:
  # Generate regression metrics
  - type: RegressionMetrics
    params: {}
  # Generate regression plots
  - type: SKLearnRepeatedKFoldCrossValidation
    params:
      axes_labels:
      - True pChEMBL
      - Predicted pChEMBL
      max_val: 10
      min_val: 3
      pXC50: true
      n_splits: 5
      n_repeats: 5
      title: True vs Predicted pAC50 on test set
