data:
  # Specify the dataset file
  resource: ../ChEMBL_permissive_CYP3A4_CHEMBL340_aggregated.parquet
  # must be intake
  type: intake
  # Specify input column containing SMILES
  input_col: OPENADMET_SMILES
  # Specify each (1+) of the target columns, or the column that you're trying to predict
  target_cols:
  - pchembl_value_mean
  # Specify whether or not to drop NaN data rows
  dropna: true

# Additional metadata
metadata:
  authors: Hugo M-O
  email: hugo.macdermott-opeskin@omsf.io
  biotargets:
  - CYP3A4
  build_number: 0
  description: basic regression  using a GAT model
  driver: pytorch
  name: chemprop_MT_pchembl_testing_chemprop
  tag: openadmet-CYP3A4-pchembl-regression-testing-cv
  tags:
  - openadmet
  - test
  - pchembl
  version: v1

# Section specifying training procedure
procedure:
  # Specify data splits
  split:
    # Specify how data will be split, can be ShuffleSplitter, ScaffoldSplitter, etc.
    # See openadmet.models.split
    type: "ShuffleSplitter"
    # Specify split parameters
    params:
      train_size: 0.7
      val_size: 0.1
      test_size: 0.2
      shuffle: True

  # Featurization specification
  feat:
    # Using the GATGraphFeaturizer (for GAT model)
    # See openadmet.models.features
    type: "GATGraphFeaturizer"
    params:
      batch_size: 128
      num_workers: 4

  # Model specification
  model:
    # Indicate model type
    # See openadmet.models.architecture
    type: GATv2Model
    # Specify model parameters
    params:
      input_dim: 8
      edge_dim: 4
      hidden_dim: 64
      num_layers: 4
      num_heads: 8
      gat_dropout: 0.1
      pooling: "mean"
      output_dim: 1

  # Specify training configuration
  train:
    # Specify the trainer, here LightningTrainer as GAT is a PyTorch Lightning model
    # See openadmet.models.trainer
    type: "LightningTrainer"

# Section specifying report generation
report:
  # Configure evaluation
  eval:
  # Generate regression metrics
  - type: RegressionMetrics
    params: {}
  # Generate regression plots
  - type: RegressionPlots
    params:
      axes_labels:
      - True pChEMBL
      - Predicted pChEMBL
      max_val: 10
      min_val: 3
      pXC50: true
      title: Multitask True vs Predicted pChEMBL on test set
  # Do cross validation, will write out stats to the report directory
  - type: PytorchLightningRepeatedKFoldCrossValidation
    params:
      axes_labels:
      - True pChEMBL
      - Predicted pChEMBL
      n_repeats: 2
      n_splits: 5
      pXC50: true
      random_state: 42
      title: Multitask True vs Predicted pChEMBL on test set