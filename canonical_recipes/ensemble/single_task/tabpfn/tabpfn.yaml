# Section specifying input data
data:
  # Specify the dataset file, can be S3 path etc.
  resource: ../ChEMBL_permissive_CYP3A4_CHEMBL340_aggregated.parquet
  # must be intake
  type: intake
  # Specify input column containing SMILES
  input_col: OPENADMET_SMILES
  # Specify each (1+) of the target columns, or the column that you're trying to predict
  target_cols:
  - pchembl_value_mean
  # Specify whether or not to drop NaN data rows
  dropna: true

# Additional metadata
metadata:
  authors: Cynthia Xu
  email: cynthia.xu@omsf.io
  biotargets:
  - CYP3A4
  build_number: 0
  description: basic regression using a TabPFN model
  driver: sklearn
  name: tabpfn_pchembl
  tag: openadmet-chembl
  tags:
  - openadmet
  - test
  - pchembl
  version: v1

# Section specifying training procedure
procedure:
  # Featurization specification
  feat:
    # Using DescriptorFeaturizer for 2D descriptors
    # See openadmet.models.features
    type: DescriptorFeaturizer
    params:
      descr_type: desc2d

  # Model specification
  model:
    # Indicate model type
    # See openadmet.models.architecture
    type: TabPFNRegressorModel
    # Specify model parameters
    params:
      ignore_pretraining_limits: True
      device: cuda

  # Ensemble specification
  ensemble:
    type: CommitteeRegressor
    n_models: 5
    calibration_method: scaling-factor

  # Specify data splits
  split:
    # Specify how data will be split, can be ShuffleSplitter, ScaffoldSplitter, etc.
    # See openadmet.models.split
    type: ShuffleSplitter
    # Specify split parameters
    params:
      random_state: 42
      train_size: 0.7
      val_size: 0.1 # Validation set is needed for uncertainty calibration
      test_size: 0.2

  # Specify training configuration
  train:
    # Specify the trainer, here SKLearnBasicTrainer for sklearn models
    # See openadmet.models.trainer
    type: SKLearnBasicTrainer

# Section specifying report generation
report:
  # Configure evaluation
  eval:
  # Generate regression metrics
  - type: RegressionMetrics
    params: {}
  # Generate regression plots
  - type: RegressionPlots
    params:
      axes_labels:
      - True pChEMBL
      - Predicted pChEMBL
      max_val: 10
      min_val: 3
      pXC50: true
      title: CYP3A4 True vs Predicted pChEMBL on test set
  # Do cross validation, will write out stats to the report directory
  - type: PytorchLightningRepeatedKFoldCrossValidation
    params:
      axes_labels:
      - True pChEMBL
      - Predicted pChEMBL
      max_val: 10
      min_val: 3
      n_repeats: 5
      n_splits: 2
      pXC50: true
      random_state: 42
      title: CYP3A4 True vs Predicted pChEMBL on test set
  # Generate uncertainty metrics
  - type: UncertaintyMetrics
    params:
      bins: 100
      resolution: 99
      scaled: True
  # Generate uncertainty calibration plot
  - type: UncertaintyPlots
    params: {}